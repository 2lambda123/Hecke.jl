\section##
NfOrder: Orders in in absolute number fields
##

\introduction##
Assume that $K$ is an algebraic number field of degree $d$.
Classically, an order $\mathcal O$ of $K$ is a subring $\mathcal O \subseteq K$, which is a free $\Z$-module of rank $d = \operatorname{degree}(K)$.
For computational reasons, an $\mathcal O$ is always given together with a matrix $A$ (the \textit{basis matrix}), such that the elements $\omega_1,\dotsc,\omega_d$ defined by 
\[ \begin{pmatrix} \omega_1 \\ \omega_2 \\ \vdots \\ \omega_d \end{pmatrix} = A \cdot \begin{pmatrix} 1 \\ \alpha \\ \vdots \\ \alpha^d \end{pmatrix} \]
are a $\Z$-basis of $\mathcal O$.
\par
In \textsc{Hecke} orders in number fields are modelled by objects of type \code{NfOrder}.
##

\subsection##Creation of objects of type \code{NfOrder}##

\function##EquationOrder##K::NfNumberField##NfOrder##arg1::Bool = true;I am a paramter::Bool = false
##
Assume that \code{K} represents the number field $\Q(\alpha)$. This function will produce the equation order $\Z[\alpha]$ of $\alpha$, that is, the order of $K$ with basis matrix $\mathbf 1_d$.
##

\exam
##
julia> Qx, x = PolynomialRing(QQ,"x")
(Univariate Polynomial Ring in x over Rational Field,x)
julia> f = x^19 + x^2 + 3*x + 11
x^19 + 1*x^2 + 3*x + 11
julia> K, a = NumberField(f, "a")
(Number field over Rational Field with defining polynomial x^19 + 1*x^2 + 3*x + 11,a)
julia> O = EquationOrder(K)
Order of Number field over Rational Field with defining polynomial x^19 + 1*x^2 + 3*x + 11
with Z-basis [1,a,a^2,a^3,a^4,a^5,a^6,a^7,a^8,a^9,a^10,a^11,a^12,a^13,a^14,a^15,a^16,a^17,a^18]
julia> ASSERT assert(degree(O) == 19)
##long##

\function##Order##K::NfNumberField,x::fmpz_mat,y::fmpz##NfOrder##check::Bool = true##
Return the order with basis matrix \code{x/y}. If the parameter \code{check} is set to true, it is checked that this really is an order.
Thus it is checked if \code{x} is non-singular and that the set is closed under multiplication.
##

\function##Order##K::NfNumberField,x::FakeFmpqMat##NfOrder##check::Bool = true##
Return the order with basis matrix \code{x}. If the parameter \code{check} is set to true, it is checked that this really is an order.
Thus it is checked if \code{x} is non-singular and that the set is closed under multiplication.
##

\function##Order##x::Array{nf_elem, 1}##NfOrder##check::Bool = true##
If \code{K} is the parent of the elements of \code{x}, this function returns the order of \code{K} with basis \code{x}. If the parameter \code{check} is set to true, it is checked that this really is an order.
Thus it is checked if \code{x} is a basis of \code{K} and that the set is closed under multiplication.
##


\subsection##Creation of elements##

\function
##O##x::nf_elem##NfOrderEllem##check::Bool = true##
Given an order \code{O}, try to coerce the number field element \code{x} into \code{O}
##

\exam
##
  julia> 4 == 2 + 2
  julia> ASSERT #assert(3 == 2)
##error##
